JAVA PROFILE 1.0.1, created Tue Jan 22 00:27:42 2002

Header for -Xhprof ASCII Output

Copyright 1998 Sun Microsystems, Inc. 901 San Antonio Road, Palo Alto,
California, 94303, U.S.A.  All Rights Reserved.

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME	is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
		the time spent by a thread waiting to enter a monitor.
		Entries in this record are TRACEs ranked by the percentage
		of total monitor contention time and a brief description
		of the monitor.  The "count" field indicates the number of 
		times the monitor was contended at that TRACE.

MONITOR DUMP	is a complete snapshot of all the monitors and threads in 
		the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=6f14b0, id = 1, name="Finalizer", group="system")
THREAD START (obj=6f1350, id = 2, name="Reference Handler", group="system")
THREAD START (obj=6f1260, id = 3, name="main", group="main")
THREAD START (obj=6f2160, id = 4, name="HPROF CPU profiler", group="system")
THREAD START (obj=6f5a40, id = 5, name="Signal Dispatcher", group="system")
THREAD START (obj=6f3230, id = 6, name="CompileThread0", group="system")
THREAD END (id = 3)
THREAD START (obj=71c570, id = 7, name="Thread-0", group="main")
THREAD END (id = 5)
TRACE 15:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:83)
	Station.readInput(Station.java:41)
	SimNet.readInput(SimNet.java:26)
TRACE 10:
	<empty>
TRACE 25:
	SimNet.initialSample(SimNet.java:51)
	SimNet.simulate(SimNet.java:56)
	SimNet.main(SimNet.java:131)
	SimNet.main(SimNet.java:136)
TRACE 22:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:92)
	Station.readInput(Station.java:46)
	SimNet.readInput(SimNet.java:26)
TRACE 17:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:92)
	Station.readInput(Station.java:56)
	SimNet.readInput(SimNet.java:26)
TRACE 12:
	Simulator.<clinit>(Simulator.java:146)
TRACE 42:
	Station.doArrival(Station.java:248)
	EventBlock.dispatch(EventBlock.java:60)
	SimNet.simulate(SimNet.java:63)
	SimNet.main(SimNet.java:131)
TRACE 14:
	SimNet.<init>(SimNet.java:15)
	SimNet.main(SimNet.java:136)
TRACE 29:
	Simulator.trace(Simulator.java:107)
	SimNet.simulate(SimNet.java:62)
	SimNet.main(SimNet.java:131)
	SimNet.main(SimNet.java:136)
TRACE 36:
	java.lang.StrictMath.floor(StrictMath.java:Native method)
	java.lang.Math.floor(Math.java:322)
	java.lang.Math.round(Math.java:524)
	Simulator.limit(Simulator.java:179)
TRACE 51:
	sun.io.CharToByteSingleByte.convert(CharToByteSingleByte.java:117)
	sun.io.CharToByteConverter.convertAny(CharToByteConverter.java:142)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:167)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:114)
TRACE 58:
	Simulator.w(Simulator.java:184)
	Simulator.w(Simulator.java:188)
	Simulator$Trace.toString(Simulator.java:54)
	java.lang.String.valueOf(String.java:1947)
TRACE 26:
	Simulator.trace(Simulator.java:97)
	Simulator.trace(Simulator.java:107)
	Simulator.queue(Simulator.java:120)
	SimNet.initialSample(SimNet.java:52)
TRACE 5:
	java.util.Properties.loadConvert(Properties.java:287)
	java.util.Properties.load(Properties.java:258)
	java.security.Security.initialize(Security.java:87)
	java.security.Security.access$000(Security.java:26)
TRACE 31:
	Station.propagate(Station.java:126)
	Station.queueMsg(Station.java:167)
	Station.doXmit(Station.java:233)
	EventBlock.dispatch(EventBlock.java:56)
TRACE 30:
	Scatter.mark(Scatter.java:33)
	Station.doXmit(Station.java:216)
	EventBlock.dispatch(EventBlock.java:56)
	SimNet.simulate(SimNet.java:63)
TRACE 57:
	java.io.BufferedWriter.newLine(BufferedWriter.java:222)
	java.io.PrintStream.newLine(PrintStream.java:286)
	java.io.PrintStream.println(PrintStream.java:439)
	Scatter.report(Scatter.java:76)
TRACE 34:
	SimNet.simulate(SimNet.java:59)
	SimNet.main(SimNet.java:131)
	SimNet.main(SimNet.java:136)
TRACE 47:
	sun.io.CharToByteSingleByte.convert(CharToByteSingleByte.java:167)
	sun.io.CharToByteConverter.convertAny(CharToByteConverter.java:142)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:167)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:114)
TRACE 46:
	java.lang.StrictMath.floor(StrictMath.java:Unknown line)
	java.lang.Math.floor(Math.java:322)
	java.lang.Math.round(Math.java:524)
	Simulator.limit(Simulator.java:179)
TRACE 55:
	sun.io.CharToByteSingleByte.convert(CharToByteSingleByte.java:96)
	sun.io.CharToByteConverter.convertAny(CharToByteConverter.java:142)
	java.io.OutputStreamWriter.write(OutputStreamWriter.java:167)
	java.io.BufferedWriter.flushBuffer(BufferedWriter.java:114)
TRACE 2:
	sun.misc.URLClassPath.getLoader(URLClassPath.java:247)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:224)
	sun.misc.URLClassPath.getResource(URLClassPath.java:137)
	java.net.URLClassLoader$1.run(URLClassLoader.java:192)
TRACE 20:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:83)
	Station.readInput(Station.java:56)
	SimNet.readInput(SimNet.java:26)
TRACE 48:
	java.lang.System.arraycopy(System.java:Native method)
	java.lang.FloatingDecimal.toJavaFormatString(FloatingDecimal.java:928)
	java.lang.Double.toString(Double.java:128)
	Simulator.w(Simulator.java:188)
TRACE 56:
	java.lang.String.valueOf(String.java:2041)
	java.io.PrintStream.print(PrintStream.java:326)
	Scatter.report(Scatter.java:59)
	Simulator.report(Simulator.java:137)
TRACE 27:
	java.io.Win32FileSystem.getBooleanAttributes(Win32FileSystem.java:Native method)
	java.io.File.exists(File.java:548)
	sun.misc.URLClassPath$FileLoader.getResource(URLClassPath.java:780)
	sun.misc.URLClassPath.getResource(URLClassPath.java:138)
TRACE 37:
	Station.schedule(Station.java:138)
	Station.doXmit(Station.java:206)
	EventBlock.dispatch(EventBlock.java:56)
	SimNet.simulate(SimNet.java:63)
TRACE 52:
	java.io.FileOutputStream.writeBytes(FileOutputStream.java:Native method)
	java.io.FileOutputStream.write(FileOutputStream.java:212)
	java.io.PrintStream.write(PrintStream.java:222)
	java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:230)
TRACE 38:
	SimNet.simulate(SimNet.java:62)
	SimNet.main(SimNet.java:131)
	SimNet.main(SimNet.java:136)
TRACE 50:
	java.io.BufferedWriter.min(BufferedWriter.java:139)
	java.io.BufferedWriter.write(BufferedWriter.java:204)
	java.io.Writer.write(Writer.java:129)
	java.io.PrintStream.write(PrintStream.java:267)
TRACE 8:
	sun.net.www.protocol.file.Handler.openConnection(Handler.java:60)
	java.net.URL.openConnection(URL.java:781)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:427)
	sun.misc.Launcher$AppClassLoader.getPermissions(Launcher.java:294)
TRACE 1:
	java.net.URLClassLoader.findClass(URLClassLoader.java:188)
	java.lang.ClassLoader.loadClass(ClassLoader.java:297)
	java.lang.ClassLoader.loadClass(ClassLoader.java:290)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:286)
TRACE 28:
	Station.doArrival(Station.java:244)
	EventBlock.dispatch(EventBlock.java:60)
	SimNet.simulate(SimNet.java:63)
	SimNet.main(SimNet.java:131)
TRACE 39:
	Station.updateStation(Station.java:299)
	Station.updateFrom(Station.java:287)
	Station.doUpdate(Station.java:277)
	EventBlock.dispatch(EventBlock.java:68)
TRACE 59:
	java.lang.String.substring(String.java:1521)
	Simulator.w(Simulator.java:184)
	Simulator.w(Simulator.java:188)
	Message.toString(Message.java:14)
TRACE 7:
	sun.security.provider.PolicyFile.getPermissions(PolicyFile.java:789)
	java.security.SecureClassLoader.getPermissions(SecureClassLoader.java:144)
	java.net.URLClassLoader.getPermissions(URLClassLoader.java:420)
	sun.misc.Launcher$AppClassLoader.getPermissions(Launcher.java:294)
TRACE 16:
	java.io.FileInputStream.read(FileInputStream.java:Unknown line)
	Station.readInt(Station.java:92)
	Station.readInput(Station.java:64)
	SimNet.readInput(SimNet.java:26)
TRACE 3:
	java.io.FileInputStream.readBytes(FileInputStream.java:Native method)
	java.io.FileInputStream.read(FileInputStream.java:183)
	sun.misc.Resource.getBytes(Resource.java:67)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:245)
TRACE 21:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readString(Station.java:102)
	Station.readInput(Station.java:44)
	SimNet.readInput(SimNet.java:26)
TRACE 44:
	java.util.TreeMap.put(TreeMap.java:466)
	Simulator.queue(Simulator.java:122)
	Station.schedule(Station.java:151)
	Station.doXmit(Station.java:206)
TRACE 13:
	Simulator.<clinit>(Simulator.java:151)
TRACE 54:
	java.io.PrintStream.<init>(PrintStream.java:81)
	java.io.PrintStream.<init>(PrintStream.java:59)
	Simulator.output(Simulator.java:159)
	Scatter.report(Scatter.java:40)
TRACE 24:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:92)
	Station.readInput(Station.java:49)
	SimNet.readInput(SimNet.java:26)
TRACE 18:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:83)
	Station.readInput(Station.java:64)
	SimNet.readInput(SimNet.java:26)
TRACE 6:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Native method)
	java.lang.ClassLoader.findBootstrapClass0(ClassLoader.java:677)
	java.lang.ClassLoader.loadClass(ClassLoader.java:292)
	java.lang.ClassLoader.loadClass(ClassLoader.java:290)
TRACE 32:
	Simulator.dequeue(Simulator.java:126)
	SimNet.simulate(SimNet.java:60)
	SimNet.main(SimNet.java:131)
	SimNet.main(SimNet.java:136)
TRACE 23:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:85)
	Station.readInput(Station.java:48)
	SimNet.readInput(SimNet.java:26)
TRACE 11:
	java.lang.ClassLoader.defineClass0(ClassLoader.java:Native method)
	java.lang.ClassLoader.defineClass(ClassLoader.java:486)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:111)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:248)
TRACE 49:
	java.lang.String.valueOf(String.java:2040)
	java.io.PrintStream.print(PrintStream.java:326)
	Graph.report(Graph.java:55)
	Simulator.report(Simulator.java:137)
TRACE 35:
	EventBlock.newXmit(EventBlock.java:36)
	Station.schedule(Station.java:144)
	Station.queueMsg(Station.java:162)
	Station.doXmit(Station.java:233)
TRACE 4:
	java.net.URLClassLoader.defineClass(URLClassLoader.java:247)
	java.net.URLClassLoader.access$100(URLClassLoader.java:56)
	java.net.URLClassLoader$1.run(URLClassLoader.java:195)
	java.security.AccessController.doPrivileged(AccessController.java:Native method)
TRACE 45:
	java.util.TreeMap.fixAfterDeletion(TreeMap.java:1348)
	java.util.TreeMap.deleteEntry(TreeMap.java:1323)
	java.util.TreeMap.remove(TreeMap.java:494)
	Simulator.dequeue(Simulator.java:127)
TRACE 43:
	java.lang.System.arraycopy(System.java:Native method)
	java.lang.String.getChars(String.java:562)
	java.lang.StringBuffer.append(StringBuffer.java:402)
	java.lang.StringBuffer.append(StringBuffer.java:515)
TRACE 40:
	java.lang.Double.doubleToLongBits(Double.java:Native method)
	java.lang.Double.compareTo(Double.java:550)
	java.lang.Double.compareTo(Double.java:576)
	java.util.TreeMap.compare(TreeMap.java:1047)
TRACE 33:
	java.lang.Math.round(Math.java:524)
	Simulator.limit(Simulator.java:179)
	Scatter.mark(Scatter.java:36)
	Station.queueMsg(Station.java:159)
TRACE 41:
	Simulator.queue(Simulator.java:122)
	Station.propagate(Station.java:130)
	Station.doXmit(Station.java:240)
	EventBlock.dispatch(EventBlock.java:56)
TRACE 9:
	sun.misc.Launcher$AppClassLoader.getPermissions(Launcher.java:295)
	java.security.SecureClassLoader.getProtectionDomain(SecureClassLoader.java:162)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:111)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:248)
TRACE 53:
	java.lang.String.valueOf(String.java:2040)
	java.io.PrintStream.print(PrintStream.java:326)
	Scatter.report(Scatter.java:59)
	Simulator.report(Simulator.java:137)
TRACE 19:
	java.io.FileInputStream.read(FileInputStream.java:Native method)
	Station.readInt(Station.java:85)
	Station.readInput(Station.java:56)
	SimNet.readInput(SimNet.java:26)
CPU SAMPLES BEGIN (total = 93) Tue Jan 22 00:27:46 2002
rank   self  accum   count trace method
   1 17.20% 17.20%      16    52 java.io.FileOutputStream.writeBytes
   2  8.60% 25.81%       8     3 java.io.FileInputStream.readBytes
   3  5.38% 31.18%       5    11 java.lang.ClassLoader.defineClass0
   4  4.30% 35.48%       4    15 java.io.FileInputStream.read
   5  3.23% 38.71%       3     6 java.lang.ClassLoader.findBootstrapClass
   6  3.23% 41.94%       3    31 Station.propagate
   7  3.23% 45.16%       3    55 sun.io.CharToByteSingleByte.convert
   8  2.15% 47.31%       2    34 SimNet.simulate
   9  2.15% 49.46%       2    47 sun.io.CharToByteSingleByte.convert
  10  2.15% 51.61%       2    17 java.io.FileInputStream.read
  11  2.15% 53.76%       2    18 java.io.FileInputStream.read
  12  2.15% 55.91%       2    56 java.lang.String.valueOf
  13  1.08% 56.99%       1     5 java.util.Properties.loadConvert
  14  1.08% 58.06%       1    58 Simulator.w
  15  1.08% 59.14%       1    30 Scatter.mark
  16  1.08% 60.22%       1    51 sun.io.CharToByteSingleByte.convert
  17  1.08% 61.29%       1    57 java.io.BufferedWriter.newLine
  18  1.08% 62.37%       1    42 Station.doArrival
  19  1.08% 63.44%       1    29 Simulator.trace
  20  1.08% 64.52%       1    36 java.lang.StrictMath.floor
  21  1.08% 65.59%       1    14 SimNet.<init>
  22  1.08% 66.67%       1     2 sun.misc.URLClassPath.getLoader
  23  1.08% 67.74%       1    20 java.io.FileInputStream.read
  24  1.08% 68.82%       1    48 java.lang.System.arraycopy
  25  1.08% 69.89%       1    46 java.lang.StrictMath.floor
  26  1.08% 70.97%       1    27 java.io.Win32FileSystem.getBooleanAttributes
  27  1.08% 72.04%       1    37 Station.schedule
  28  1.08% 73.12%       1    22 java.io.FileInputStream.read
  29  1.08% 74.19%       1    38 SimNet.simulate
  30  1.08% 75.27%       1    50 java.io.BufferedWriter.min
  31  1.08% 76.34%       1     8 sun.net.www.protocol.file.Handler.openConnection
  32  1.08% 77.42%       1     1 java.net.URLClassLoader.findClass
  33  1.08% 78.49%       1    32 Simulator.dequeue
  34  1.08% 79.57%       1    39 Station.updateStation
  35  1.08% 80.65%       1    59 java.lang.String.substring
  36  1.08% 81.72%       1     7 sun.security.provider.PolicyFile.getPermissions
  37  1.08% 82.80%       1    16 java.io.FileInputStream.read
  38  1.08% 83.87%       1    49 java.lang.String.valueOf
  39  1.08% 84.95%       1    21 java.io.FileInputStream.read
  40  1.08% 86.02%       1    44 java.util.TreeMap.put
  41  1.08% 87.10%       1    35 EventBlock.newXmit
  42  1.08% 88.17%       1    54 java.io.PrintStream.<init>
  43  1.08% 89.25%       1    24 java.io.FileInputStream.read
  44  1.08% 90.32%       1    45 java.util.TreeMap.fixAfterDeletion
  45  1.08% 91.40%       1     4 java.net.URLClassLoader.defineClass
  46  1.08% 92.47%       1    19 java.io.FileInputStream.read
  47  1.08% 93.55%       1    23 java.io.FileInputStream.read
  48  1.08% 94.62%       1    43 java.lang.System.arraycopy
  49  1.08% 95.70%       1    41 Simulator.queue
  50  1.08% 96.77%       1    53 java.lang.String.valueOf
  51  1.08% 97.85%       1    33 java.lang.Math.round
  52  1.08% 98.92%       1    40 java.lang.Double.doubleToLongBits
  53  1.08% 100.00%       1     9 sun.misc.Launcher$AppClassLoader.getPermissions
CPU SAMPLES END
